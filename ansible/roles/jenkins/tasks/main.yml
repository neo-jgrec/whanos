- name: Install Java and fontconfig (required by Jenkins)
  apt:
    name: "{{ item }}"
    state: present
  with_items:
    - fontconfig
    - openjdk-17-jre
  become: true

- name: Add Jenkins' official GPG key
  apt_key:
    url: https://pkg.jenkins.io/debian-stable/jenkins.io-2023.key
    state: present
  become: true

- name: Add Jenkins' official repository
  apt_repository:
    repo: deb https://pkg.jenkins.io/debian-stable binary/
    state: present
  become: true

- name: Update apt cache
  apt:
    update_cache: yes
  become: true

- name: Install Jenkins
  apt:
    name: jenkins
    state: present
  become: true

- name: Stop Jenkins (autostarts after install)
  service:
    name: jenkins
    state: stopped
  become: true

- name: Create all needed folders
  file:
    path: "{{ item.path }}"
    state: directory
    owner: "{{ item.owner }}"
    group: "{{ item.group }}"
    mode: "{{ item.mode }}"
    recurse: true
  with_items:
    - {path: "/usr/share/jenkins/ref/init.groovy.d", owner: "jenkins", group: "jenkins", mode: "0755"}
    - {path: "/var/cache/jenkins/tmp", owner: "jenkins", group: "jenkins", mode: "0755"}
    - {path: "/var/cache/jenkins/heapdumps", owner: "jenkins", group: "jenkins", mode: "0755"}
    - {path: "/var/lib/jenkins/plugins", owner: "jenkins", group: "jenkins", mode: "0755"}
  become: true

- name: Update JENKINS_JAVA_OPTIONS
  become: true
  lineinfile:
    path: "/etc/default/jenkins"
    regexp: ".*-Djava.awt.headless=true.*"
    line: 'JENKINS_JAVA_OPTIONS="-Djava.awt.headless=true -Djava.net.preferIPv4Stack=true -Djenkins.install.runSetupWizard=false -Djava.io.tmpdir=/var/cache/jenkins/tmp/ -Dorg.apache.commons.jelly.tags.fmt.timeZone=America/New_York -Duser.timezone=America/New_York"'
    state: present

- name: Update JENKINS_ARGS
  become: true
  lineinfile:
    path: "/etc/default/jenkins"
    regexp: ".*JENKINS_ARGS=.*"
    line: 'JENKINS_ARGS="--pluginroot=/var/cache/jenkins/plugins"'
    state: present

- name: Create limits file
  become: true
  copy:
    dest: "/etc/security/limits.d/30-jenkins.conf"
    src: "30-jenkins.conf"

- name: Download jenkins-plugin-manager
  get_url:
    url: https://github.com/jenkinsci/plugin-installation-manager-tool/releases/download/2.13.2/jenkins-plugin-manager-2.13.2.jar
    dest: /tmp/jenkins-plugin-manager.jar

- name: Put files in place
  copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: "{{ item.owner }}"
    group: "{{ item.group }}"
    mode: "{{ item.mode }}"
  with_items:
    - {src: "plugins.yaml", dest: "/tmp/plugins.yaml", owner: "jenkins", group: "jenkins", mode: "0644"}
    - {src: "jenkins.yaml", dest: "/var/lib/jenkins/jenkins.yaml", owner: "jenkins", group: "jenkins", mode: "0644"}
    - {src: "job_dsl.groovy", dest: "/usr/share/jenkins/ref/init.groovy.d/job_dsl.groovy", owner: "jenkins", group: "jenkins", mode: "0644"}
    - {src: "docker-deploy.sh", dest: "/var/whanos/docker-deploy.sh", owner: "jenkins", group: "jenkins", mode: "0755"}
  become: true

- name: run the jenkins-plugin-manager
  become: true
  command: java -jar /tmp/jenkins-plugin-manager.jar --jenkins-version 2.479.1 --plugin-file /tmp/plugins.yaml --plugin-download-directory /var/lib/jenkins/plugins

- name: update plugin ownership
  become: true
  file:
    path: /var/lib/jenkins
    owner: jenkins
    group: jenkins
    state: directory
    recurse: true

- name: Add the jenkins user in the docker group
  become: true
  user:
    name: jenkins
    groups: docker
    append: yes

- name: start jenkins service
  become: true
  systemd:
    name: jenkins
    state: started
